{
  "idToTestNameHash": {
    "FrScTe1": "From Scratch Tests From Scratch 1: petJudger - handles missing arguments",
    "FrScTe2": "From Scratch Tests From Scratch 1: petJudger - handles missing name argument",
    "FrScTe3": "From Scratch Tests From Scratch 1: petJudger - handles different breeds with valid name",
    "FrScTe4": "From Scratch Tests From Scratch 2: loopFromOneUpToAnother - it logs the correct numbers",
    "FrScTe5": "From Scratch Tests From Scratch 2: loopFromOneUpToAnother - handles equal start and end",
    "FrScTe6": "From Scratch Tests From Scratch 2: loopFromOneUpToAnother - handles start greater than end",
    "FrScTe7": "From Scratch Tests From Scratch 3: shoutEveryLetterForLoop - it logs the correct letters",
    "FrScTe8": "From Scratch Tests From Scratch 3: shoutEveryLetterForLoop - handles empty string",
    "FrScTe9": "From Scratch Tests From Scratch 3: shoutEveryLetterForLoop - it uses a for loop",
    "FrScTe10": "From Scratch Tests From Scratch 4: letterCaseCounts - it correctly counts the letter cases",
    "FrScTe11": "From Scratch Tests From Scratch 5: getNamesOfGreedyGnomes - returns an array of the right length",
    "FrScTe12": "From Scratch Tests From Scratch 5: getNamesOfGreedyGnomes - returns only the names of the gnomes",
    "FrScTe13": "From Scratch Tests carMaker - returns a car object with right primitive properties",
    "FrScTe14": "From Scratch Tests carMaker - returns a car object with the owner passed into the owners array",
    "FrScTe15": "From Scratch Tests getFavoriteChildName - returns the name of the first child",
    "FrScTe16": "From Scratch Tests getPessimisticTotal - adds up all the given numbers to a total and then rounds down to the nearest int",
    "FrScTe17": "From Scratch Tests getNamesOfGreedyGnomes - returns an array of the right length",
    "FrScTe18": "From Scratch Tests getNamesOfGreedyGnomes - returns only the names of the gnomes",
    "FrScTe19": "From Scratch Tests getNamesOfGreedyGnomes - does not use a for or while loop",
    "FrScTe20": "From Scratch Tests obliterate - removes all existing properties and adds wasObliterated",
    "FrScTe21": "From Scratch Tests obliterate - removes all existing properties and adds wasObliterated",
    "DeTe1": "Debug Tests fixVariable - The message is logged and returned correctly",
    "DeTe2": "Debug Tests doubleAllItemsPurely - doubles each item in the array without modifying the original",
    "DeTe3": "Debug Tests getUpdatedParent - does not mutate the parent by making a deep clone and then adding a child to the tail of the parent's array"
  },
  "testNameToIdHash": {
    "From Scratch Tests petJudger - it logs the correct messages": "FrScTe1",
    "From Scratch Tests loopFromOneUpToAnother - it logs the correct numbers": "FrScTe2",
    "From Scratch Tests shoutEveryLetterForLoop - it logs the correct letters": "FrScTe3",
    "From Scratch Tests shoutEveryLetterForLoop - it uses a for loop": "FrScTe4",
    "From Scratch Tests shoutArrayMethod - it logs the correct letters without a for loop": "FrScTe5",
    "From Scratch Tests shoutArrayMethod - it does not use a loop": "FrScTe6",
    "From Scratch Tests generateMultiplesOf5ToNum - it returns the correct array of numbers": "FrScTe7",
    "From Scratch Tests isLongArray - it returns the correct boolean": "FrScTe8",
    "From Scratch Tests addToFrontOrBack - adds value to the front or back of a given arr": "FrScTe9",
    "From Scratch Tests addToFrontOrBack - handles missing value properly": "FrScTe10",
    "From Scratch Tests replaceMiddleValue - replaces the middle value of the array with the given value": "FrScTe11",
    "From Scratch Tests getAllXCoordinates - returns an array of all x coordinates": "FrScTe12",
    "From Scratch Tests carMaker - returns a car object with right primitive properties": "FrScTe13",
    "From Scratch Tests carMaker - returns a car object with the owner passed into the owners array": "FrScTe14",
    "From Scratch Tests getFavoriteChildName - returns the name of the first child": "FrScTe15",
    "From Scratch Tests getPessimisticTotal - adds up all the given numbers to a total and then rounds down to the nearest int": "FrScTe16",
    "From Scratch Tests getNamesOfGreedyGnomes - returns an array of the right length": "FrScTe17",
    "From Scratch Tests getNamesOfGreedyGnomes - returns only the names of the gnomes": "FrScTe18",
    "From Scratch Tests getNamesOfGreedyGnomes - does not use a for loop": "FrScTe19",
    "From Scratch Tests getAllNumbersFromString - returns an array of all digits": "FrScTe20",
    "From Scratch Tests obliterate - removes all existing properties and adds wasObliterated": "FrScTe20",
    "Debug Tests fixVariable - The message is logged and returned correctly": "DeTe1",
    "Debug Tests doubleAllItemsPurely - doubles each item in the array without modifying the original": "DeTe2",
    "Debug Tests addChildToParentMutation - mutates the parent by adding a child to the tail of the parent's array": "DeTe3",
    "From Scratch Tests appendOrPrepend - adds value to the front or back of a given arr": "FrScTe9",
    "From Scratch Tests appendOrPrepend - handles missing value properly": "FrScTe10",
    "From Scratch Tests shoutArrayMethod - it does NOT use a for or while loop": "FrScTe6",
    "Debug Tests getUpdatedParent - does not mutate the parent by making a deep clone and then adding a child to the tail of the parent's array": "DeTe3",
    "From Scratch Tests getNamesOfGreedyGnomes - does not use a for or while loop": "FrScTe19",
    "From Scratch Tests From Scratch 1: petJudger - handles missing arguments": "FrScTe1",
    "From Scratch Tests From Scratch 1: petJudger - handles missing name argument": "FrScTe2",
    "From Scratch Tests From Scratch 1: petJudger - handles different breeds with valid name": "FrScTe3",
    "From Scratch Tests From Scratch 2: loopFromOneUpToAnother - it logs the correct numbers": "FrScTe4",
    "From Scratch Tests From Scratch 2: loopFromOneUpToAnother - handles equal start and end": "FrScTe5",
    "From Scratch Tests From Scratch 2: loopFromOneUpToAnother - handles start greater than end": "FrScTe6",
    "From Scratch Tests From Scratch 3: shoutEveryLetterForLoop - it logs the correct letters": "FrScTe7",
    "From Scratch Tests From Scratch 3: shoutEveryLetterForLoop - handles empty string": "FrScTe8",
    "From Scratch Tests From Scratch 3: shoutEveryLetterForLoop - it uses a for loop": "FrScTe9",
    "From Scratch Tests From Scratch 4: letterCaseCounts - it correctly counts the letter cases": "FrScTe10",
    "From Scratch Tests From Scratch 5: getNamesOfGreedyGnomes - returns an array of the right length": "FrScTe11",
    "From Scratch Tests From Scratch 5: getNamesOfGreedyGnomes - returns only the names of the gnomes": "FrScTe12"
  },
  "testScores": {
    "From Scratch Tests": {
      "FrScTe1": 0,
      "FrScTe2": 0,
      "FrScTe3": 0,
      "FrScTe4": 0,
      "FrScTe5": 1,
      "FrScTe6": 1,
      "FrScTe7": 0,
      "FrScTe8": 1,
      "FrScTe9": 0,
      "FrScTe10": 0,
      "FrScTe11": 0,
      "FrScTe12": 0
    },
    "Debug Tests": {
      "DeTe1": 0,
      "DeTe2": 0,
      "DeTe3": 0
    }
  },
  "humanReadable": {
    "From Scratch Tests": "3/12",
    "finalTestScore": "FINAL SCORE: 3/15",
    "Debug Tests": "0/3"
  }
}